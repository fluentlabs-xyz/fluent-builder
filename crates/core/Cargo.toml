[package]
name = "fluent-compiler"
description = "Core library for compiling Rust smart contracts to WASM/rWASM bytecode with ABI generation for the Fluent blockchain"
version.workspace = true
edition.workspace = true
license = "MIT OR Apache-2.0"
repository = "https://github.com/fluentlabs-xyz/fluent-compiler-suite"
keywords = ["fluent", "wasm", "rwasm", "compiler", "blockchain"]
categories = ["development-tools", "wasm"]

[features]
default = []
# Enable ethers blockchain integration
ethers = ["dep:ethers", "dep:async-trait", "dep:tokio"]

[dependencies]
# Error handling
eyre.workspace = true
thiserror.workspace = true

# Logging
tracing.workspace = true

# Serialization
serde.workspace = true
serde_json.workspace = true
toml.workspace = true

# Encoding/Hashing
hex.workspace = true
sha2.workspace = true
sha3.workspace = true

# Utilities
convert_case.workspace = true
walkdir.workspace = true
chrono.workspace = true

# Rust parsing
syn.workspace = true
proc-macro2.workspace = true
quote.workspace = true

# SDK integration
fluentbase-sdk-derive-core.workspace = true
fluentbase-types.workspace = true


# Optional blockchain dependencies
ethers = { version = "2.0", features = ["abigen"], optional = true }
async-trait = { version = "0.1", optional = true }
tokio = { version = "1", features = ["rt", "macros"], optional = true }

# Archive creation
tar = "0.4"
flate2 = "1.0"
zip = { version = "0.6", features = ["deflate"] }
ignore = "0.4"

[build-dependencies]
rustc_version = "0.4"
tracing.workspace = true

[dev-dependencies]
tempfile.workspace = true
insta = { version = "1.34", features = ["json"] }